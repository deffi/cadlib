We want to be able to re-use Transform objects without cloning; this implies that the Transform object cannot store a
reference to the object being transformed or to the next Transform in a chain. Therefore, transformation chains are
represented by a Chained Transform and a transformed object is represented by a Transformed Object. Also, Objects and
Transforms are immutable.

Supported operations:
  * Transform * Transform => Chained (Transform)
  * Transform * Object    => Transformed (Object)
  * Object    * Object    => Intersection (Object)
  * Object    + Object    => Union (Object)
  * Object    - Object    => Difference (Object)


Object * Transform is not supported: the only (?) reasonable interpretation would be that o*t is the same as t*o, but
this would mean that
    (o * t1) * t2 == t2 * (t1 * o)
    o * (t1 * t2) == (t1 * t2) * o
and therefore o * t1 * t2 would not be associative.

Each transform applies to a single object (potentially a union).

Associative operations with more than two elements are combined so the result is independent of parentheses placement:
  * Chaining of transforms:
        (rotate * scale) * translate
        rotate * (scale * translate)
    Becomes
        Chained transform
        |-- Rotate
        |-- Scale
        '-- Translate
  * Unions:
        (a + b) + c
        a + (b + c)
    Becomes
        Union
        |-- a
        |-- b
        '-- c
  * Intersections:
        (a * b) * c
        a * (b * c)
    Becomes
        Intersection
        |-- a
        |-- b
        '-- c
  * Applying a chained transform to an object:
        (rotate*translate)*cube
        rotate*(translate*cube)
    Becomes
        Transformed
        |-- Chained
        |   |-- Rotate
        |   '-- Translate
        '-- Cube

Other operations are not associative:
  * CSG operations with transformed objects:
        t * (a * b)
        (t * a) * b
  * Differences:
        a - (b - c)
        (a - b) - c

== Class hierarchy ==

Object
|-- Cuboid
|-- Frustum
|-- Layer
|-- Plane
|-- Sphere
|-- Transformed
'-- Csg
    |-- Union
    |-- Difference
    '-- Intersection
Transform
|-- Chained
|-- RotateAxisAngle
|-- RotateFromTo
|-- RotateXyz
|-- RotateYpr
|-- ScaleAxisFactor
|-- ScaleUniform
|-- ScaleXyz
'-- Translate
